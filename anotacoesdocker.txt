## Informações sobre o docker! (Criação do Docker - aula 01)

1. criar o arquivo do docker ignore e docker file
2. o docker file possui uma imagem nomeada api
3. gemini cria um docker para app.py
4. docker build -t api .
5. dockes images
6. docker run -p 8000:8000 api (comando para subirmos o projeto)
7. http://localhost:8000/docs (acesso ao docker da api) 
8. ao invés de exercutarmos todas as 6 etapas para subirmos o projeto, 
nós automatizamos através do docker com apenas 1 comando.

(Automatização do processo - aula 02)

1. CI (Integração Contínua) = Automatizar o processo.
2. Docker compose simplifica a execução do ambiente de desenvolvimento
3. O Docker é uma plataforma que permite empacotar aplicações e dependências em containers,
que são mini máquinas virtuais leves que garantem que minha aplicação vai rodar igual em qualquer ambiente.
4. No docker compose nós vamos ter vários containers pra cada parte da minha API.
5. Uma imagem Docker vai conter um SO básico, bibliotecas, dependências, código e o comando pra rodar,
ela é usada para criar containers.
6. Endpoints são URLs específicas para cada função da minha API

(Deploy realizado - aula 03)

1. Cria no Google Could o projeto
2. Roda "gcloud auth  login" para vincular a conta do google cloud com a do projeto
3. Roda "gcloud config set projet <PROJECT_ID>" para configurar o projeto ativo no google cloud
4. Roda "gcloud run deploy --port=8000" para o deploy ser realizado